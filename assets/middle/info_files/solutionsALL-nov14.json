{"cube":"def cube(num):\n\treturn (num**3)","isSubstring":"def isSubstring(str1,str2):\n\tif(str1 in str2):\n\t\treturn True\n\telse:\n\t\treturn False","initialVowels":"def initialVowels(text):\n\tcount=0\n\tfor word in text.split(' '):\n\t\tif(word[0] in 'aeiouAEIOU'):\n\t\t\tcount=count+1\n\treturn count","mathOperations":"def mathOperations(operation,int1,int2):\n\tif(operation=='-'):\n\t\treturn(int1-int2)\n\telif(operation=='+'):\n\t\treturn(int1+int2)\n\telif(operation=='*'):\n\t\treturn(int1*int2)\n\telif(operation=='\/'):\n\t\treturn(int1\/int2)\n\telif(operation=='%'):\n\t\treturn(int1%int2)\n\telse:\n\t\treturn 0","fibonacci":"def fibonacci(num):\n\tif(num==0):\n\t\treturn '0'\n\telif(num==1):\n\t\treturn '0'\n\telif(num==2):\n\t\treturn '0,1'\n\telse:\n\t\tnums=['0','1']\n\t\tfor i in range(num-2):\n\t\t\tnextNum=int(nums[i])+int(nums[i+1])\n\t\t\tnums.append(str(nextNum))\n\treturn ','.join(nums)","backwards":"def backwards(word):\n\trevWord=''\n\tfor char in word:\n\t\trevWord=char+revWord\n\treturn revWord","combineSorted":"def combineSorted(list1,list2):\n\tlist3=list1+list2\n\tlist3.sort()\n\treturn list3","doubleIt":"def doubleIt(num):\n\treturn (num*2)","lessThanX":"def lessThanX(listOfNums,x):\n\tnums=[]\n\tfor num in listOfNums:\n\t\tif(num<x):\n\t\t\tnums.append(num)\n\treturn nums","listOverlap":"def listOverlap(listOfNumsA,listOfNumsB):\n\toverlap=[]\n\tfor num in listOfNumsA:\n\t\tif(num in listOfNumsB and num not in overlap):\n\t\t\toverlap.append(num)\n\tfor num in listOfNumsB:\n\t\tif(num in listOfNumsA and num not in overlap):\n\t\t\toverlap.append(num)\n\treturn overlap","isPal":"def isPal(word):\n\trevWord=word[::-1]\n\tprint(word+' '+revWord)\n\tif(revWord==word):\n\t\treturn True\n\telse:\n\t\treturn False","caesarEncrypt":"def caesarEncrypt(text):\n\talpha='abcdefghijklmnopqrstuvwxyz'\n\tAPLPHA=alpha.upper()\n\tencryptedText=''\n\tfor char in text:\n\t\tif(char.isupper()):\n\t\t\tindex=ALPHA.find(char)\n\t\t\tencryptedText=encryptedText+ALPHA[index+3]\n\t\telse:\n\t\t\tindex=alpha.find(char)\n\t\t\tencryptedText=encryptedText+alpha[index+3]\n\treturn encryptedText","inRange":"def inRange(testNum,floor,ceiling):\n\tif(testNum>floor and testNum<ceiling):\n\t\treturn True\n\telse:\n\t\treturn False","containsLetter":"def containsLetter(char,text):\n\twords=[]\n\tfor word in text.split(' '):\n\t\tif(char in word):\n\t\t\twords.append(word)\n\treturn words","wordCount":"def wordCount(maxWordLen,text):\n\tcount=0\n\tfor word in text.split(' '):\n\t\tif(len(word)<=maxWordLen):\n\t\t\tcount=count+1\n\treturn count","generateInitials":"def generateInitials(fullName):\n\tinitials=''\n\tfor name in fullName.split(' '):\n\t\tinitials=initials+name[0]+'.'\n\treturn initials","isAMinHeap":"def isAMinHeap(A):\n\tj=len(A)-1\n\tif((j+1)==1 or (j+1)==0):\n\t\treturn True\n\tk=int((j-1)\/2)\n\tif(A[j]>A[k]):\n\t\treturn(isAMinHeap(A[0:j]))\n\telse:\n\t\treturn False","allOdds":"def allOdds(n):\n\ti=0\n\tnums=[]\n\twhile(i<=n):\n\t\tif(i % 2 != 0):\n\t\t\tnums.append(i)\n\t\ti=i+1\n\treturn nums","factorial":"def factorial(num):\n\tval=1\n\tfor i in range(1,num+1):\n\t\tval=val*i\n\treturn val"}